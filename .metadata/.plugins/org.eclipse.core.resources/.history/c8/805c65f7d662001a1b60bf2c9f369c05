package com.capgemini.springmvc.dao;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.EntityTransaction;
import javax.persistence.PersistenceUnit;

import org.springframework.stereotype.Repository;

import com.cap.designpattern.dto.Employee;
import com.capgemini.springmvc.dto.EmployeePrimaryInfo;
@Repository
public class EmployeeDAOImp implements EmployeeDAO{
	@PersistenceUnit
	private EntityManagerFactory factory;
	@Override
	public EmployeePrimaryInfo auth(int id, String password) {
		// TODO Auto-generated method stub
		return null;
	}
	@Override
	public List<EmployeePrimaryInfo> getALLInfo() {
		EntityManager manager = factory.createEntityManager();
		List<EmployeePrimaryInfo> li = new ArrayList<EmployeePrimaryInfo>();
		return li;
	}

	@Override
	public EmployeePrimaryInfo getEmployeeInfo(int id) {
		EntityManager manager = factory.createEntityManager();
		EmployeePrimaryInfo primaryInfo = manager.find(EmployeePrimaryInfo.class, id);
		manager.close();
		return primaryInfo;
	}

	@Override
	public boolean updateEmployeeInfo(EmployeePrimaryInfo info) {
		// TODO Auto-generated method stub
		return false;
	}

	@Override
	public boolean deleteEmployeeInfo(int id) {
		boolean isDeleted = false;
		EntityManager manager = factory.createEntityManager();
		EmployeePrimaryInfo primaryInfo = manager.find(EmployeePrimaryInfo.class, id);
		if(primaryInfo !=null) {
			EntityTransaction transaction =manager.getTransaction();
			transaction.begin();
			manager.remove(primaryInfo);
			transaction.commit();
			isDeleted = true;
		}
		manager.close();
		return isDeleted;
	}

	@Override
	public boolean createEmployeeInfo(EmployeePrimaryInfo info) {
		EntityManager manager = factory.createEntityManager();
		EntityTransaction transaction = manager.getTransaction();
		boolean isAdded = false;
		try {
			transaction.begin();
			manager.persist(info);
			transaction.commit();
			isAdded = true;
			System.out.println("Added");
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			manager.close();
		}
		return isAdded;
	}

}
